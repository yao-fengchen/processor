// Code generated by github.com/actgardner/gogen-avro/v7. DO NOT EDIT.
/*
 * SOURCE:
 *     SysFlow.avsc
 */
package sfgo

import (
	"github.com/actgardner/gogen-avro/v7/compiler"
	"github.com/actgardner/gogen-avro/v7/vm"
	"github.com/actgardner/gogen-avro/v7/vm/types"
	"io"
)

type K8sEvent struct {
	Kind K8sComponent `json:"kind"`

	Action K8sAction `json:"action"`

	Ts int64 `json:"ts"`

	Message string `json:"message"`
}

const K8sEventAvroCRC64Fingerprint = "S6\x1b'\x03\x17B\xe6"

func NewK8sEvent() *K8sEvent {
	return &K8sEvent{}
}

func DeserializeK8sEvent(r io.Reader) (*K8sEvent, error) {
	t := NewK8sEvent()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func DeserializeK8sEventFromSchema(r io.Reader, schema string) (*K8sEvent, error) {
	t := NewK8sEvent()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func writeK8sEvent(r *K8sEvent, w io.Writer) error {
	var err error
	err = writeK8sComponent(r.Kind, w)
	if err != nil {
		return err
	}
	err = writeK8sAction(r.Action, w)
	if err != nil {
		return err
	}
	err = vm.WriteLong(r.Ts, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Message, w)
	if err != nil {
		return err
	}
	return err
}

func (r *K8sEvent) Serialize(w io.Writer) error {
	return writeK8sEvent(r, w)
}

func (r *K8sEvent) Schema() string {
	return "{\"fields\":[{\"name\":\"kind\",\"type\":{\"name\":\"K8sComponent\",\"namespace\":\"sysflow.type\",\"symbols\":[\"K8S_NODES\",\"K8S_NAMESPACES\",\"K8S_PODS\",\"K8S_REPLICATIONCONTROLLERS\",\"K8S_SERVICES\",\"K8S_EVENTS\",\"K8S_REPLICASETS\",\"K8S_DAEMONSETS\",\"K8S_DEPLOYMENTS\",\"K8S_UNKNOWN\"],\"type\":\"enum\"}},{\"name\":\"action\",\"type\":{\"name\":\"K8sAction\",\"namespace\":\"sysflow.type\",\"symbols\":[\"K8S_COMPONENT_ADDED\",\"K8S_COMPONENT_MODIFIED\",\"K8S_COMPONENT_DELETED\",\"K8S_COMPONENT_ERROR\",\"K8S_COMPONENT_NONEXISTENT\",\"K8S_COMPONENT_UNKNOWN\"],\"type\":\"enum\"}},{\"name\":\"ts\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"}],\"name\":\"sysflow.event.K8sEvent\",\"type\":\"record\"}"
}

func (r *K8sEvent) SchemaName() string {
	return "sysflow.event.K8sEvent"
}

func (_ *K8sEvent) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ *K8sEvent) SetInt(v int32)       { panic("Unsupported operation") }
func (_ *K8sEvent) SetLong(v int64)      { panic("Unsupported operation") }
func (_ *K8sEvent) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ *K8sEvent) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ *K8sEvent) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ *K8sEvent) SetString(v string)   { panic("Unsupported operation") }
func (_ *K8sEvent) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *K8sEvent) Get(i int) types.Field {
	switch i {
	case 0:
		return &K8sComponentWrapper{Target: &r.Kind}
	case 1:
		return &K8sActionWrapper{Target: &r.Action}
	case 2:
		return &types.Long{Target: &r.Ts}
	case 3:
		return &types.String{Target: &r.Message}
	}
	panic("Unknown field index")
}

func (r *K8sEvent) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *K8sEvent) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ *K8sEvent) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *K8sEvent) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ *K8sEvent) Finalize()                        {}

func (_ *K8sEvent) AvroCRC64Fingerprint() []byte {
	return []byte(K8sEventAvroCRC64Fingerprint)
}
