// Code generated by github.com/actgardner/gogen-avro/v7. DO NOT EDIT.
/*
 * SOURCE:
 *     SysFlow.avsc
 */
package sfgo

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v7/vm"
	"github.com/actgardner/gogen-avro/v7/vm/types"
)

type SFObjectState int32

const (
	SFObjectStateCREATED  SFObjectState = 0
	SFObjectStateMODIFIED SFObjectState = 1
	SFObjectStateREUP     SFObjectState = 2
)

func (e SFObjectState) String() string {
	switch e {
	case SFObjectStateCREATED:
		return "CREATED"
	case SFObjectStateMODIFIED:
		return "MODIFIED"
	case SFObjectStateREUP:
		return "REUP"
	}
	return "unknown"
}

func writeSFObjectState(r SFObjectState, w io.Writer) error {
	return vm.WriteInt(int32(r), w)
}

func NewSFObjectStateValue(raw string) (r SFObjectState, err error) {
	switch raw {
	case "CREATED":
		return SFObjectStateCREATED, nil
	case "MODIFIED":
		return SFObjectStateMODIFIED, nil
	case "REUP":
		return SFObjectStateREUP, nil
	}

	return -1, fmt.Errorf("invalid value for SFObjectState: '%s'", raw)
}

func (b *SFObjectState) MarshalJSON() ([]byte, error) {
	return json.Marshal(b.String())
}

func (b *SFObjectState) UnmarshalJSON(data []byte) error {
	var stringVal string
	err := json.Unmarshal(data, &stringVal)
	if err != nil {
		return err
	}
	val, err := NewSFObjectStateValue(stringVal)
	*b = val
	return err
}

type SFObjectStateWrapper struct {
	Target *SFObjectState
}

func (b *SFObjectStateWrapper) SetBoolean(v bool) {
	panic("Unable to assign boolean to int field")
}

func (b *SFObjectStateWrapper) SetInt(v int32) {
	*(b.Target) = SFObjectState(v)
}

func (b *SFObjectStateWrapper) SetLong(v int64) {
	panic("Unable to assign long to int field")
}

func (b *SFObjectStateWrapper) SetFloat(v float32) {
	panic("Unable to assign float to int field")
}

func (b *SFObjectStateWrapper) SetUnionElem(v int64) {
	panic("Unable to assign union elem to int field")
}

func (b *SFObjectStateWrapper) SetDouble(v float64) {
	panic("Unable to assign double to int field")
}

func (b *SFObjectStateWrapper) SetBytes(v []byte) {
	panic("Unable to assign bytes to int field")
}

func (b *SFObjectStateWrapper) SetString(v string) {
	panic("Unable to assign string to int field")
}

func (b *SFObjectStateWrapper) Get(i int) types.Field {
	panic("Unable to get field from int field")
}

func (b *SFObjectStateWrapper) SetDefault(i int) {
	panic("Unable to set default on int field")
}

func (b *SFObjectStateWrapper) AppendMap(key string) types.Field {
	panic("Unable to append map key to from int field")
}

func (b *SFObjectStateWrapper) AppendArray() types.Field {
	panic("Unable to append array element to from int field")
}

func (b *SFObjectStateWrapper) NullField(int) {
	panic("Unable to null field in int field")
}

func (b *SFObjectStateWrapper) Finalize() {}
