// Code generated by github.com/actgardner/gogen-avro/v7. DO NOT EDIT.
/*
 * SOURCE:
 *     SysFlow.avsc
 */
package sfgo

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v7/vm"
	"github.com/actgardner/gogen-avro/v7/vm/types"
)

type UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnum int

const (
	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumSFHeader UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnum = 0

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumContainer UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnum = 1

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumProcess UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnum = 2

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumFile UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnum = 3

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumProcessEvent UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnum = 4

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumNetworkFlow UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnum = 5

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumFileFlow UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnum = 6

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumFileEvent UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnum = 7

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumNetworkEvent UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnum = 8

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumProcessFlow UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnum = 9
)

type UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow struct {
	SFHeader     *SFHeader
	Container    *Container
	Process      *Process
	File         *File
	ProcessEvent *ProcessEvent
	NetworkFlow  *NetworkFlow
	FileFlow     *FileFlow
	FileEvent    *FileEvent
	NetworkEvent *NetworkEvent
	ProcessFlow  *ProcessFlow
	UnionType    UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnum
}

func writeUnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow(r *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow, w io.Writer) error {

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumSFHeader:
		return writeSFHeader(r.SFHeader, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumContainer:
		return writeContainer(r.Container, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumProcess:
		return writeProcess(r.Process, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumFile:
		return writeFile(r.File, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumProcessEvent:
		return writeProcessEvent(r.ProcessEvent, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumNetworkFlow:
		return writeNetworkFlow(r.NetworkFlow, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumFileFlow:
		return writeFileFlow(r.FileFlow, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumFileEvent:
		return writeFileEvent(r.FileEvent, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumNetworkEvent:
		return writeNetworkEvent(r.NetworkEvent, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumProcessFlow:
		return writeProcessFlow(r.ProcessFlow, w)
	}
	return fmt.Errorf("invalid value for *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow")
}

func NewUnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow() *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow {
	return &UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow{}
}

func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow) SetBoolean(v bool) {
	panic("Unsupported operation")
}
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow) SetInt(v int32) {
	panic("Unsupported operation")
}
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow) SetFloat(v float32) {
	panic("Unsupported operation")
}
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow) SetDouble(v float64) {
	panic("Unsupported operation")
}
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow) SetBytes(v []byte) {
	panic("Unsupported operation")
}
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow) SetString(v string) {
	panic("Unsupported operation")
}
func (r *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow) SetLong(v int64) {
	r.UnionType = (UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnum)(v)
}
func (r *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow) Get(i int) types.Field {
	switch i {
	case 0:
		r.SFHeader = NewSFHeader()
		return r.SFHeader
	case 1:
		r.Container = NewContainer()
		return r.Container
	case 2:
		r.Process = NewProcess()
		return r.Process
	case 3:
		r.File = NewFile()
		return r.File
	case 4:
		r.ProcessEvent = NewProcessEvent()
		return r.ProcessEvent
	case 5:
		r.NetworkFlow = NewNetworkFlow()
		return r.NetworkFlow
	case 6:
		r.FileFlow = NewFileFlow()
		return r.FileFlow
	case 7:
		r.FileEvent = NewFileEvent()
		return r.FileEvent
	case 8:
		r.NetworkEvent = NewNetworkEvent()
		return r.NetworkEvent
	case 9:
		r.ProcessFlow = NewProcessFlow()
		return r.ProcessFlow
	}
	panic("Unknown field index")
}
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow) NullField(i int) {
	panic("Unsupported operation")
}
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow) SetDefault(i int) {
	panic("Unsupported operation")
}
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow) AppendArray() types.Field {
	panic("Unsupported operation")
}
func (_ *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow) Finalize() {
}

func (r *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow) MarshalJSON() ([]byte, error) {
	if r == nil {
		return []byte("null"), nil
	}
	switch r.UnionType {
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumSFHeader:
		return json.Marshal(map[string]interface{}{"SFHeader": r.SFHeader})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumContainer:
		return json.Marshal(map[string]interface{}{"Container": r.Container})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumProcess:
		return json.Marshal(map[string]interface{}{"Process": r.Process})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumFile:
		return json.Marshal(map[string]interface{}{"File": r.File})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumProcessEvent:
		return json.Marshal(map[string]interface{}{"ProcessEvent": r.ProcessEvent})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumNetworkFlow:
		return json.Marshal(map[string]interface{}{"NetworkFlow": r.NetworkFlow})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumFileFlow:
		return json.Marshal(map[string]interface{}{"FileFlow": r.FileFlow})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumFileEvent:
		return json.Marshal(map[string]interface{}{"FileEvent": r.FileEvent})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumNetworkEvent:
		return json.Marshal(map[string]interface{}{"NetworkEvent": r.NetworkEvent})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowTypeEnumProcessFlow:
		return json.Marshal(map[string]interface{}{"ProcessFlow": r.ProcessFlow})
	}
	return nil, fmt.Errorf("invalid value for *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow")
}

func (r *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if value, ok := fields["SFHeader"]; ok {
		r.UnionType = 0
		return json.Unmarshal([]byte(value), &r.SFHeader)
	}
	if value, ok := fields["Container"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.Container)
	}
	if value, ok := fields["Process"]; ok {
		r.UnionType = 2
		return json.Unmarshal([]byte(value), &r.Process)
	}
	if value, ok := fields["File"]; ok {
		r.UnionType = 3
		return json.Unmarshal([]byte(value), &r.File)
	}
	if value, ok := fields["ProcessEvent"]; ok {
		r.UnionType = 4
		return json.Unmarshal([]byte(value), &r.ProcessEvent)
	}
	if value, ok := fields["NetworkFlow"]; ok {
		r.UnionType = 5
		return json.Unmarshal([]byte(value), &r.NetworkFlow)
	}
	if value, ok := fields["FileFlow"]; ok {
		r.UnionType = 6
		return json.Unmarshal([]byte(value), &r.FileFlow)
	}
	if value, ok := fields["FileEvent"]; ok {
		r.UnionType = 7
		return json.Unmarshal([]byte(value), &r.FileEvent)
	}
	if value, ok := fields["NetworkEvent"]; ok {
		r.UnionType = 8
		return json.Unmarshal([]byte(value), &r.NetworkEvent)
	}
	if value, ok := fields["ProcessFlow"]; ok {
		r.UnionType = 9
		return json.Unmarshal([]byte(value), &r.ProcessFlow)
	}
	return fmt.Errorf("invalid value for *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlow")
}
